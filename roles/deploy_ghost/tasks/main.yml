---
- name: Create GCP address
  google.cloud.gcp_compute_address:
    name: ghost-address
    region: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: ghost_address

- name: Update GCP variables
  set_fact:
    ghost_ip: "{{ ghost_address.address }}"
    ghost_port: 80

- name: Deploy Ghost
  kubernetes.core.k8s:
    state: present
    definition: 
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ghost-deployment
        namespace: "{{ namespace }}"
        labels: 
          app: ghost
      spec:
        replicas: 1
        selector: 
          matchLabels:
            app: ghost
        strategy: 
          type: Recreate
        template:
          metadata:
            labels:
              app: ghost
          spec:
            containers:
              - name: ghost
                image: "{{ ghost_image }}"
                env:
                - name: database__connection__host
                  value: "{{ database_service }}"
                - name: database__connection__database
                  value: "{{ database_name }}"
                - name: database__connection__user
                  value: "{{ database_user }}"
                - name: database__connection__password
                  valueFrom:
                    secretKeyRef:
                      name: ghost-secret-data
                      key: password
                ports:
                  - containerPort: "{{ ghost_container_port }}"

- name: Create Ghost Service
  kubernetes.core.k8s:
    state: present
    definition:   
      apiVersion: v1
      kind: Service
      metadata: 
        name: ghost-service
        namespace: "{{ namespace }}"
        labels:
          app: ghost
      spec:
        type: LoadBalancer
        loadBalancerIP: "{{ ghost_address.address }}"
        selector:
          app: ghost
        ports:
          - targetPort: "{{ ghost_container_port }}" # Port that containers are listening on
            port: "{{ ghost_port }}" # Port that's exposed internally in the cluster

- name: Get MySQL Pod name
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors:
      - app = mysql
      - tier in (database)
  register: database_pod

- name: Got MySQL pod name
  debug: 
    var: database_pod.resources[0].metadata.name


- name: Wait for ghost to initialize
  wait_for:
    timeout: 45

- name: Create Admin user
  vars:
    passw:
      valueFrom:
        secretKeyRef:
          name: ghost-secret-data
          key: password
  kubernetes.core.k8s_exec: 
    namespace: "{{ namespace }}"
    pod: "{{database_pod.resources[0].metadata.name}}"
    command: mysql -ughost_user -pSecretpassword16 ghost_database -e "update users set name='ascn', password='\$2b\$10\$4P15js1Hx5NoGNg5g2aXtedSQB8rii2vEsDpwtUzBEKYcJS4lQJ9u', email='ascn@example.com', status='active' where id=1;"
  register: create_admin
  until: "create_admin is not failed"
  retries: 5
  delay: 15