---
- name: Create GCP address
  google.cloud.gcp_compute_address:
    name: ghost-address
    region: "{{ gcp_region }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: ghost_address

- name: Update GCP variables
  set_fact:
    ghost_ip: "{{ ghost_address.address }}"
    ghost_port: 80

- name: Deploy Ghost
  kubernetes.core.k8s:
    state: present
    definition: 
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ghost-deployment
        namespace: "{{ namespace }}"
        labels: 
          app: ghost
          tier: ghost
      spec:
        selector: 
          matchLabels:
            app: ghost
        strategy: 
          type: Recreate
        template:
          metadata:
            labels:
              app: ghost
              tier: ghost
          spec:
            containers:
              - name: ghost
                image: "{{ ghost_image }}"
                env:
                - name: url
                  value: "http://{{ ghost_ip }}"
                - name: database__connection__host
                  value: "{{ database_service }}"
                - name: database__connection__database
                  value: "{{ database_name }}"
                - name: database__connection__user
                  value: "{{ database_user }}"
                - name: database__connection__password
                  valueFrom:
                    secretKeyRef:
                      name: ghost-secret-data
                      key: password
                - name: mail__transport
                  value: "SMTP"
                - name: mail__from
                  value: "noreply@ascn.com"
                - name: mail__options__service
                  value: "Mailgun"
                - name: mail__options__host
                  value: "smtp.mailgun.org"
                - name: mail__options__port
                  value: "587"
                - name: mail__options__secureConnection
                  value: "false"
                - name: mail__options__auth__user
                  value: "{{ mailgun_user }}"
                - name: mail__options__auth__pass
                  valueFrom:
                    secretKeyRef:
                      name: ghost-secret-data
                      key: mailgun_password
                ports:
                  - containerPort: "{{ ghost_container_port }}"
                    port: "{{ ghost_port }}"

- name: Create Ghost Service
  kubernetes.core.k8s:
    state: present
    definition:   
      apiVersion: v1
      kind: Service
      metadata: 
        name: ghost-service
        namespace: "{{ namespace }}"
        labels:
          app: ghost
      spec:
        type: LoadBalancer
        loadBalancerIP: "{{ ghost_ip }}"
        selector:
          app: ghost
        ports:
          - targetPort: "{{ ghost_container_port }}" # Port that containers are listening on
            port: "{{ ghost_port }}" # Port that's exposed internally in the cluster


- name: Wait for database pod to become ready
  shell: "kubectl wait --namespace={{ namespace }} --for=condition=Ready pods --selector tier=database --timeout=600s"

- name: Wait for ghost pod to become ready
  shell: "kubectl wait --namespace={{ namespace }} --for=condition=Ready pods --selector tier=ghost --timeout=600s"

- name: Get MySQL Pod name
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors:
      - app = mysql
      - tier in (database)
  register: database_pod

- name: Got MySQL pod name
  debug: 
    var: database_pod.resources[0].metadata.name

- name: Create Admin user
  kubernetes.core.k8s_exec: 
    namespace: "{{ namespace }}"
    pod: "{{database_pod.resources[0].metadata.name}}"
    command: mysql -u"{{database_user}}" -p"{{db_password}}" "{{database_name}}" -e "update users set name='ascn', password='\$2b\$10\$4P15js1Hx5NoGNg5g2aXtedSQB8rii2vEsDpwtUzBEKYcJS4lQJ9u', email='ascn@example.com', status='active' where id=1;"
  register: create_admin
  until: "create_admin is not failed"
  retries: 5
  delay: 15

- name: Check if user has been created
  kubernetes.core.k8s_exec: 
    namespace: "{{ namespace }}"
    pod: "{{database_pod.resources[0].metadata.name}}"
    command: mysql -u"{{database_user}}" -p"{{db_password}}" "{{database_name}}" -e "select exists(select 1 from users where name = 'ascn')"
  register: created_admin_query

- name: Give ghost more time to initialize
  wait_for:
    timeout: 45
  when: created_admin_query.stdout_lines[1] == "0"

- name: Make new attempt to create admin user
  kubernetes.core.k8s_exec: 
    namespace: "{{ namespace }}"
    pod: "{{database_pod.resources[0].metadata.name}}"
    command: mysql -u"{{database_user}}" -p"{{db_password}}" "{{database_name}}" -e "update users set name='ascn', password='\$2b\$10\$4P15js1Hx5NoGNg5g2aXtedSQB8rii2vEsDpwtUzBEKYcJS4lQJ9u', email='ascn@example.com', status='active' where id=1;"
  register: create_admin
  until: "create_admin is not failed"
  retries: 5
  delay: 15
  when: created_admin_query.stdout_lines[1] == "0"

- name: Create Dashboard for monitoring
  command: gcloud monitoring dashboards create --config-from-file=roles/deploy_ghost/dashboards/monitoring_dashboard.json